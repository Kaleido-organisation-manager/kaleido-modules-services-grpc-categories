name: CI/CD Pipeline on merge

'on':
  push:
    branches:
      - develop
      - main
  workflow_dispatch:


jobs:
  gitversion:
    name: GitVersion
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.Semver.outputs.FullSemVer }}
    steps:
      - uses: actions/checkout@v4
        name: Checkout Repository
        with:
          fetch-depth: 0
      - uses: gittools/actions/gitversion/setup@v3.0.0
      - id: Semver
        uses: gittools/actions/gitversion/execute@v3.0.0

  build-categories-service:
    name: Build Categories Service
    needs: gitversion
    runs-on: ubuntu-latest
    permissions:
      packages: read
    steps:
      - uses: actions/checkout@v4
        name: Checkout Repository
      - name: Add Github nugetfeed
        run: dotnet nuget add source --username DriesDelanghe --password ${{ secrets.NUGET_GITHUB_TOKEN }} --store-password-in-clear-text --name github "https://nuget.pkg.github.com/Kaleido-organisation-manager/index.json"
      - name: Restore dependencies of categories service
        run: dotnet restore 
        working-directory: src/Kaleido.Modules.Services.Grpc.Categories
      - name: Build categories service
        run: dotnet build
        working-directory: src/Kaleido.Modules.Services.Grpc.Categories

  build-categories-service-migrations:
    name: Build Categories Service Migrations
    needs: gitversion
    runs-on: ubuntu-latest
    permissions:
      packages: read
    steps:
      - uses: actions/checkout@v4
        name: Checkout Repository
      - name: Add Github nugetfeed
        run: dotnet nuget add source --username DriesDelanghe --password ${{ secrets.NUGET_GITHUB_TOKEN }} --store-password-in-clear-text --name github "https://nuget.pkg.github.com/Kaleido-organisation-manager/index.json"
      - name: Restore dependencies of categories service migrations
        run: dotnet restore
        working-directory: src/Kaleido.Modules.Services.Grpc.Categories.Migrations
      - name: Build categories service migrations
        run: dotnet build
        working-directory: src/Kaleido.Modules.Services.Grpc.Categories.Migrations

  build-categories-service-client:
    name: Build Categories Service Client
    needs: gitversion
    runs-on: ubuntu-latest
    permissions:
      packages: read
    steps:
      - uses: actions/checkout@v4
        name: Checkout Repository
      - name: Add Github nugetfeed
        run: dotnet nuget add source --username DriesDelanghe --password ${{ secrets.NUGET_GITHUB_TOKEN }} --store-password-in-clear-text --name github "https://nuget.pkg.github.com/Kaleido-organisation-manager/index.json"
      - name: Restore dependencies of categories service client
        run: dotnet restore
        working-directory: src/Kaleido.Modules.Services.Grpc.Categories.Client
      - name: Build categories service client
        run: dotnet build
        working-directory: src/Kaleido.Modules.Services.Grpc.Categories.Client

  unit-tests:
    name: Run Unit Tests
    needs: [build-categories-service, build-categories-service-migrations, build-categories-service-client]
    runs-on: ubuntu-latest
    permissions:
      packages: read
    steps:
      - uses: actions/checkout@v4
        name: Checkout Repository
      - name: Add Github nugetfeed
        run: dotnet nuget add source --username DriesDelanghe --password ${{ secrets.NUGET_GITHUB_TOKEN }} --store-password-in-clear-text --name github "https://nuget.pkg.github.com/Kaleido-organisation-manager/index.json"
      - name: Restore dependencies of unit tests
        run: dotnet restore
        working-directory: src/Kaleido.Modules.Services.Grpc.Categories.Tests.Unit
      - name: Run unit tests
        run: dotnet test
        working-directory: src/Kaleido.Modules.Services.Grpc.Categories.Tests.Unit

  create-service-release:
    name: Create Dotnet Release for service
    runs-on: ubuntu-latest
    needs: [build-categories-service, build-categories-service-migrations, build-categories-service-client, gitversion]
    permissions:
      packages: read
    steps:
      - uses: actions/checkout@v4
        name: Checkout Repository
      - name: Add Github nugetfeed
        run: dotnet nuget add source --username DriesDelanghe --password ${{ secrets.NUGET_GITHUB_TOKEN }} --store-password-in-clear-text --name github "https://nuget.pkg.github.com/Kaleido-organisation-manager/index.json"
      - name: Restore dependencies of service
        run: dotnet restore
        working-directory: src/Kaleido.Modules.Services.Grpc.Categories
      - name: Build service Release
        run: dotnet build -c Release
        working-directory: src/Kaleido.Modules.Services.Grpc.Categories
      - name: Upload Dotnet Release Artifact
        uses: actions/upload-artifact@v4
        with:
          name: categories-service
          path: src/Kaleido.Modules.Services.Grpc.Categories/bin/Release/net8.0

  create-migrations-release:
    name: Create Dotnet Release for migrations
    runs-on: ubuntu-latest
    needs: [build-categories-service, build-categories-service-migrations, build-categories-service-client, gitversion]
    permissions:
      packages: read
    steps:
      - uses: actions/checkout@v4
        name: Checkout Repository
      - name: Add Github nugetfeed
        run: dotnet nuget add source --username DriesDelanghe --password ${{ secrets.NUGET_GITHUB_TOKEN }} --store-password-in-clear-text --name github "https://nuget.pkg.github.com/Kaleido-organisation-manager/index.json"
      - name: Restore dependencies of migrations
        run: dotnet restore
        working-directory: src/Kaleido.Modules.Services.Grpc.Categories.Migrations
      - name: Build migrations
        run: dotnet build -c Release
        working-directory: src/Kaleido.Modules.Services.Grpc.Categories.Migrations
      - name: Upload Dotnet Release Artifact
        uses: actions/upload-artifact@v4
        with:
          name: categories-service-migrations
          path: src/Kaleido.Modules.Services.Grpc.Categories.Migrations/bin/Release/net8.0

  integration-tests:
    name: Run Integration Tests
    needs: [create-service-release, create-migrations-release, gitversion]
    runs-on: ubuntu-latest
    permissions:
      packages: read
    steps:
      - uses: actions/checkout@v4
        name: Checkout Repository
      - name: Add Github nugetfeed
        run: dotnet nuget add source --username DriesDelanghe --password ${{ secrets.NUGET_GITHUB_TOKEN }} --store-password-in-clear-text --name github "https://nuget.pkg.github.com/Kaleido-organisation-manager/index.json"
      - name: Restore dependencies of integration tests
        run: dotnet restore
        working-directory: src/Kaleido.Modules.Services.Grpc.Categories.Tests.Integrations
      - name: Download Service Release Artifact
        uses: actions/download-artifact@v4
        with:
          name: categories-service
          path: service/out
      - name: Download Migrations Release Artifact
        uses: actions/download-artifact@v4
        with:
          name: categories-service-migrations
          path: migrations/out
      - name: Build Category Service Docker Image
        run: docker build . -f dockerfiles/Grpc.Categories/Dockerfile.cicd -t kaleido-modules-services-grpc-categories:${{ needs.gitversion.outputs.version }} --build-arg RELEASE_DIR=service/out
      - name: Build Migrations Docker Image
        run: docker build . -f dockerfiles/Grpc.Categories.Migrations/Dockerfile.cicd -t kaleido-modules-services-grpc-categories-migrations:${{ needs.gitversion.outputs.version }} --build-arg RELEASE_DIR=migrations/out
      - name: Run integration tests
        run: dotnet test
        working-directory: src/Kaleido.Modules.Services.Grpc.Categories.Tests.Integrations
        env:
          CATEGORIES_IMAGE_NAME: kaleido-modules-services-grpc-categories:${{ needs.gitversion.outputs.version }}
          MIGRATIONS_IMAGE_NAME: kaleido-modules-services-grpc-categories-migrations:${{ needs.gitversion.outputs.version }}
          CI: true

  git-tag-release:
    name: Git Tag Release
    runs-on: ubuntu-latest
    permissions:
      contents: write
    needs: [integration-tests, unit-tests, gitversion]
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
      - name: Bump version and push tag
        uses: anothrNick/github-tag-action@v1 # Don't use @master or @v1 unless you're happy to test the latest version
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # if you don't want to set write permissions use a PAT token
          CUSTOM_TAG: ${{ needs.gitversion.outputs.version }}

  build-and-push-categories-docker-image:
    name: Build and Push Categories Service Docker Image
    needs: [git-tag-release, gitversion, create-service-release]
    runs-on: ubuntu-latest
    permissions:
      packages: write
    steps:
      - uses: actions/checkout@v4
        name: Checkout Repository
      - name: Download Service Release Artifact
        uses: actions/download-artifact@v4
        with:
          name: categories-service
          path: service/out
      - name: Build Category Service Docker Image
        run: docker build . -f dockerfiles/Grpc.Categories/Dockerfile.cicd -t ghcr.io/kaleido-organisation-manager/kaleido-modules-services-grpc-categories:${{ needs.gitversion.outputs.version }} --build-arg RELEASE_DIR=service/out
      - name: Docker login
        run: echo ${{ secrets.GITHUB_TOKEN }} | docker login ghcr.io -u ${{ github.actor }} --password-stdin
      - name: Publish Category Service Docker Image
        run: |
          # Push calculated tag
          docker push ghcr.io/kaleido-organisation-manager/kaleido-modules-services-grpc-categories:${{ needs.gitversion.outputs.version }}
          
          # Push latest tag
          docker tag ghcr.io/kaleido-organisation-manager/kaleido-modules-services-grpc-categories:${{ needs.gitversion.outputs.version }} ghcr.io/kaleido-organisation-manager/kaleido-modules-services-grpc-categories:latest
          docker push ghcr.io/kaleido-organisation-manager/kaleido-modules-services-grpc-categories:latest

  build-and-push-migrations-docker-image:
    name: Build and Push Migrations Docker Image
    needs: [git-tag-release, gitversion, create-migrations-release]
    runs-on: ubuntu-latest
    permissions:
      packages: write
    steps:
      - uses: actions/checkout@v4
        name: Checkout Repository
      - name: Download Migrations Release Artifact
        uses: actions/download-artifact@v4
        with:
          name: categories-service-migrations
          path: migrations/out
      - name: Build Migrations Docker Image
        run: docker build . -f dockerfiles/Grpc.Categories.Migrations/Dockerfile.cicd -t ghcr.io/kaleido-organisation-manager/kaleido-modules-services-grpc-categories-migrations:${{ needs.gitversion.outputs.version }} --build-arg RELEASE_DIR=migrations/out
      - name: Docker login
        run: echo ${{ secrets.GITHUB_TOKEN }} | docker login ghcr.io -u ${{ github.actor }} --password-stdin
      - name: Publish Migrations Docker Image
        run: |
          # Push calculated tag
          docker push ghcr.io/kaleido-organisation-manager/kaleido-modules-services-grpc-categories-migrations:${{ needs.gitversion.outputs.version }}
          
          # Push latest tag
          docker tag ghcr.io/kaleido-organisation-manager/kaleido-modules-services-grpc-categories-migrations:${{ needs.gitversion.outputs.version }} ghcr.io/kaleido-organisation-manager/kaleido-modules-services-grpc-categories-migrations:latest
          docker push ghcr.io/kaleido-organisation-manager/kaleido-modules-services-grpc-categories-migrations:latest

  create-client-release:
    name: Create Dotnet Release for client
    runs-on: ubuntu-latest
    needs: [git-tag-release, gitversion]
    permissions:
      packages: read
    steps:
      - uses: actions/checkout@v4
        name: Checkout Repository
      - name: Add Github nugetfeed
        run: dotnet nuget add source --username DriesDelanghe --password ${{ secrets.NUGET_GITHUB_TOKEN }} --store-password-in-clear-text --name github "https://nuget.pkg.github.com/Kaleido-organisation-manager/index.json"
      - name: Restore dependencies of client
        run: dotnet restore
        working-directory: src/Kaleido.Modules.Services.Grpc.Categories.Client
      - name: Pack dotnet package
        run: dotnet pack --configuration Release /p:Version=${{ needs.gitversion.outputs.version }} -o $GITHUB_WORKSPACE/client/out
        working-directory: src/Kaleido.Modules.Services.Grpc.Categories.Client
      - name: Upload Dotnet Release Artifact
        uses: actions/upload-artifact@v4
        with:
          name: categories-service-client
          path: client/out


  publish-client-package:
    name: Publish Client Package
    needs: [create-client-release, gitversion]
    runs-on: ubuntu-latest
    permissions:
      packages: write
    steps:
      - uses: actions/checkout@v4
        name: Checkout Repository
      - name: Download Client Release Artifact
        uses: actions/download-artifact@v4
        with:
          name: categories-service-client
          path: client/out
      - name: Add Github nugetfeed
        run: dotnet nuget add source --username DriesDelanghe --password ${{ secrets.NUGET_GITHUB_TOKEN }} --store-password-in-clear-text --name github "https://nuget.pkg.github.com/Kaleido-organisation-manager/index.json"
      - name: Publish Client Package
        run: dotnet nuget push client/out/Kaleido.Modules.Services.Grpc.Categories.Client.${{ needs.gitversion.outputs.version }}.nupkg --api-key ${{ secrets.GITHUB_TOKEN }} --source "github"

      
